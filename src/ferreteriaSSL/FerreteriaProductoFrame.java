/**
 *
 * @authors 
 * Sandra Milena Piña Soto
 * Santiago Martínez Londoño
 * Luis Bernardo Monroy Jaramillo
 */

package ferreteriaSSL;

import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.DocumentListener;
import javax.swing.event.DocumentEvent;


public class FerreteriaProductoFrame extends javax.swing.JFrame {

    private ControladorDB control = new ControladorDB(true);
    DefaultListModel productoListModel = new DefaultListModel();
    DefaultTableModel tablaModel; 
    /**
     * Creates new form FerreteriaProductoFrame
     */
    public FerreteriaProductoFrame() {
        initComponents();
        /*control.conectar();
        fillObjects();
        */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelInventario = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        inventarioTable = new javax.swing.JTable();
        productoPanel = new javax.swing.JPanel();
        buscaCodigoField = new javax.swing.JTextField();
        codLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombreField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        costoField = new javax.swing.JTextField();
        ventaField = new javax.swing.JTextField();
        cantidadField = new javax.swing.JTextField();
        categoriaComboBox = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        cantidadSlider = new javax.swing.JSlider();
        codigoField = new javax.swing.JTextField();
        categoriaPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        categoriaField = new javax.swing.JTextField();
        addCatButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        descripcionArea = new javax.swing.JTextArea();
        deleteCategoryButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        conectarMenuItem = new javax.swing.JMenuItem();
        salirMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ferreteria SSL");
        setSize(new java.awt.Dimension(640, 480));

        panelInventario.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Inventario"));

        inventarioTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo Producto", "Nombre Producto", "Costo", "Valor Venta", "Cantidad", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(inventarioTable);
        if (inventarioTable.getColumnModel().getColumnCount() > 0) {
            inventarioTable.getColumnModel().getColumn(0).setResizable(false);
            inventarioTable.getColumnModel().getColumn(1).setResizable(false);
            inventarioTable.getColumnModel().getColumn(2).setResizable(false);
            inventarioTable.getColumnModel().getColumn(3).setResizable(false);
            inventarioTable.getColumnModel().getColumn(4).setResizable(false);
            inventarioTable.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout panelInventarioLayout = new javax.swing.GroupLayout(panelInventario);
        panelInventario.setLayout(panelInventarioLayout);
        panelInventarioLayout.setHorizontalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        panelInventarioLayout.setVerticalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
        );

        productoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Producto"));

        buscaCodigoField.setEditable(false);
        buscaCodigoField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscaCodigoFieldMouseClicked(evt);
            }
        });

        codLabel.setText("Codigo Producto");

        jLabel2.setText("Nombre Producto");

        jLabel3.setText("Costo");

        jLabel4.setText("Valor Venta");

        jLabel5.setText("Cantidad");

        jLabel6.setText("Categoria");

        ventaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventaFieldActionPerformed(evt);
            }
        });

        cantidadField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadFieldActionPerformed(evt);
            }
        });

        categoriaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoriaComboBox.setEnabled(false);
        categoriaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriaComboBoxActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No hay productos" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(jList1);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Buscar Codigo");

        deleteButton.setText("Eliminar producto");
        deleteButton.setToolTipText("Debe escoger el producto de la lista superior");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Agregar Producto");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cantidadSlider.setMajorTickSpacing(10);
        cantidadSlider.setMaximum(400);
        cantidadSlider.setMinorTickSpacing(1);
        cantidadSlider.setToolTipText("Arrastre para cambiar la cantidad");
        cantidadSlider.setValue(0);
        cantidadSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cantidadSliderStateChanged(evt);
            }
        });

        codigoField.setEditable(false);

        javax.swing.GroupLayout productoPanelLayout = new javax.swing.GroupLayout(productoPanel);
        productoPanel.setLayout(productoPanelLayout);
        productoPanelLayout.setHorizontalGroup(
            productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(codLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ventaField)
                    .addComponent(categoriaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreField)
                    .addComponent(costoField)
                    .addComponent(cantidadField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cantidadSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(codigoField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(productoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscaCodigoField, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                    .addComponent(jScrollPane5)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                .addContainerGap())
        );
        productoPanelLayout.setVerticalGroup(
            productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoField)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscaCodigoField)
                    .addComponent(codLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productoPanelLayout.createSequentialGroup()
                        .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nombreField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(costoField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ventaField))
                        .addGap(8, 8, 8)
                        .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cantidadField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(cantidadSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(categoriaComboBox)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane5))
                .addGap(18, 18, 18)
                .addGroup(productoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        categoriaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Categoria"));

        jLabel1.setText("Descripcion");
        jLabel1.setToolTipText("Ingrese el nombre de la nueva categoria");

        categoriaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                categoriaFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                categoriaFieldFocusLost(evt);
            }
        });
        categoriaField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoriaFieldMouseClicked(evt);
            }
        });

        addCatButton.setText("Agregar Categoria");
        addCatButton.setEnabled(false);
        addCatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCatButtonActionPerformed(evt);
            }
        });

        descripcionArea.setColumns(20);
        descripcionArea.setRows(5);
        jScrollPane4.setViewportView(descripcionArea);

        deleteCategoryButton.setText("Eliminar Categoria");
        deleteCategoryButton.setEnabled(false);
        deleteCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCategoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout categoriaPanelLayout = new javax.swing.GroupLayout(categoriaPanel);
        categoriaPanel.setLayout(categoriaPanelLayout);
        categoriaPanelLayout.setHorizontalGroup(
            categoriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, categoriaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(categoriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addComponent(categoriaField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, categoriaPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        categoriaPanelLayout.setVerticalGroup(
            categoriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categoriaPanelLayout.createSequentialGroup()
                .addComponent(categoriaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteCategoryButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        conectarMenuItem.setText("Conectar");
        conectarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectarMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(conectarMenuItem);

        salirMenuItem.setText("Salir");
        salirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(salirMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelInventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoriaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(productoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(categoriaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    

                //System.out.println(productoListModel.getSize());
//                updateList(productoListModel, usuarioField[10].getText());
            
    private void addCatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCatButtonActionPerformed
        if (categoriaField.getText().equals("")) {
            control.updateValues("Categoria", "Descripcion", "'"+descripcionArea.getText()/*.replace("\n", ",")*/+"'","ID_Categoria", "'"+categoriaComboBox.getSelectedItem().toString()+"'");
        } 
        else {
            if (control.insertValues("Categoria", "ID_Categoria, descripcion", "'" + categoriaField.getText() + "','" + descripcionArea.getText() + "'")) {
                categoriaField.setText("");
                descripcionArea.setText("");
                fillObjects();
            }
        }
    }//GEN-LAST:event_addCatButtonActionPerformed

    
    
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String newProduct = "'"+nombreField.getText();
        newProduct += "',"+costoField.getText();
        newProduct += ","+ventaField.getText();
        newProduct += ","+cantidadField.getText();
        newProduct += ",'"+categoriaComboBox.getSelectedItem().toString()+"'";
        //System.out.println(newProduct);
        String campos = "nombre,costo,valor_venta,cantidad,ID_Categoria";
        if (codigoField.getText().equals("")){
            //si esta vacio crea un producto
            if (control.insertValues("Producto", campos , newProduct)){
                fillObjects();
                resetFields();     
            }
            else{
                JOptionPane.showMessageDialog(null, "Error creando el producto", "Crear Producto", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            boolean name = control.updateValues("Producto","nombre","'"+nombreField.getText()+"'","ID_Producto",codigoField.getText());
            boolean cost = control.updateValues("Producto","costo",costoField.getText(),"ID_Producto",codigoField.getText());
            boolean sell = control.updateValues("Producto","valor_venta",ventaField.getText(),"ID_Producto",codigoField.getText());
            boolean qtty = control.updateValues("Producto","cantidad",cantidadField.getText(),"ID_Producto",codigoField.getText());
            boolean ctgy = control.updateValues("Producto","ID_categoria","'"+categoriaComboBox.getSelectedItem().toString()+"'","ID_Producto",codigoField.getText());
            if (name&&cost&&sell&&qtty&&ctgy){
                fillObjects();
                resetFields();
            }
            else{
                JOptionPane.showMessageDialog(null, "Error Actualizando los datos", "Actualizar", JOptionPane.ERROR_MESSAGE);
            }
        }
       
    }//GEN-LAST:event_updateButtonActionPerformed

    private void cantidadSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cantidadSliderStateChanged
        cantidadField.setText(Integer.toString(cantidadSlider.getValue()));        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadSliderStateChanged

    private void cantidadFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadFieldActionPerformed
        try {
            cantidadSlider.setMaximum(2 * Integer.parseInt(cantidadField.getText()));
            cantidadSlider.setValue(Integer.parseInt(cantidadField.getText()));// TODO add your handling code here:
        } catch (NumberFormatException ex) {
        }// TODO add your handling code here:
    }//GEN-LAST:event_cantidadFieldActionPerformed

    private void deleteCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCategoryButtonActionPerformed
        if (!categoriaField.getText().equals("")){
            if (control.unusedPrimaryKey("Producto", "ID_Categoria", categoriaField.getText())){
                if (control.deleteValues("Categoria", "ID_Categoria",categoriaField.getText(),true)) {
                    categoriaField.setText("");
                    descripcionArea.setText("");
                    fillObjects();
                    JOptionPane.showMessageDialog(null, "Categoria borrada", "Borrar categoria", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }    
        else if (control.unusedPrimaryKey("Producto", "ID_Categoria", categoriaComboBox.getSelectedItem().toString())){
            if (control.deleteValues("Categoria", "ID_Categoria",categoriaComboBox.getSelectedItem().toString(),true)) {
                descripcionArea.setText("");
                fillObjects();
                JOptionPane.showMessageDialog(null, "Categoria borrada", "Borrar categoria", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else 
            JOptionPane.showMessageDialog(null, "La categoria esta siendo usada", "Error", JOptionPane.ERROR_MESSAGE);        
    }//GEN-LAST:event_deleteCategoryButtonActionPerformed

    private void enableButtons(boolean status) {
        updateButton.setEnabled(status);
        deleteButton.setEnabled(status);
        categoriaComboBox.setEnabled(status);
        addCatButton.setEnabled(status);
        deleteCategoryButton.setEnabled(status);
        buscaCodigoField.setEditable(status);
    }

    private void resetFields(){
        nombreField.setText(null);
        costoField.setText(null);
        ventaField.setText(null);
        cantidadField.setText(null);
        categoriaComboBox.setSelectedIndex(0);
        
    }
    public void updateList(DefaultListModel model,String filtro){
        //System.out.println(productoListModel.getSize());
        String[] listaVieja = new String[model.getSize()];
        for (int old=0;old<listaVieja.length;old++){
            listaVieja[old] = (String) model.get(old);
            System.out.println(listaVieja[old]);
        }
        for (int filter=0;filter<filtro.length();filter++){
            String[] listaNueva = filterList (listaVieja,filtro.charAt(filter),filter);
            model.removeAllElements();
            for (int i=0;i<listaNueva.length;i++)
                model.add(i,listaNueva[i]);
        }
    }
    public String[] filterList (String[] lista, char filtro, int index){//filtra la lista que coincida con los primeros caracteres de un campo
                int itemFiltrados = 0;
                //System.out.println("filtro " + filtro);
                for (int i=0;i<lista.length;i++){
                    //System.out.println("Primer caracter: " + lista[i].charAt(0));
                    if (filtro == lista[i].charAt(index))
                        itemFiltrados++;
                }
                //System.out.println("cantidad de coincidencias: " + Integer.toString(cedulasFiltradas));
                String[] itemsFiltradosString = new String[itemFiltrados];
                //System.out.println("cantiad de coincidencias: " + Integer.toString(itemsFiltradosString.length));
                int a=0;
                for (int i=0;i<lista.length;i++){
                    if (filtro == lista[i].charAt(index)){
                        itemsFiltradosString[a] = lista[i];
                        a++;
                    }
                }
                return itemsFiltradosString;
            }
            
    public static ArrayList<String> filterListByString(ArrayList<String> lista, String filtro){
        //System.out.println("\nLista filtrada por "+filtro);
        ArrayList<String> filtradaString; 
        filtradaString = lista;
        for(int b=0;b<filtro.length();b++)
            filtradaString = filterListByChar(filtradaString,filtro.charAt(b),b);
        //System.out.println(filtradaString);    
        return filtradaString;
    }
    public static ArrayList<String> filterListByChar (ArrayList<String> lista, char filtro, int index){//filtra la lista que coincida con los primeros caracteres de un campo
        ArrayList<String> filtered = new ArrayList<String>();
        for (String lista1 : lista) 
            if (index<lista1.length())
                if (filtro == lista1.charAt(index)) 
                    filtered.add(lista1);
        return filtered;
    }
    public void changeCatButtonName() {
        if (!categoriaField.getText().equals(""))
            addCatButton.setText("Actualizar Categoria");
        else
            addCatButton.setText("Agregar Categoria");
    }
            
    private void fillObjects() {
        //Llena los objetos comboBox
        categoriaComboBox.setModel(new DefaultComboBoxModel(control.getStringValues("Categoria", "ID_Categoria", "ID_Categoria")));
        categoriaComboBox.setSelectedIndex(0);
        //llena el JList
        String[] strings = control.getStringValues("Producto", "nombre", "ID_Producto");
        for (int i=0;i<strings.length;i++)
            productoListModel.add(i,strings[i]);
        jList1.setModel(productoListModel);
        //llena la JTable
        String[] columnas = {"ID_Producto", "Nombre", "costo", "Valor_Venta", "Cantidad", "ID_Categoria"};
        String[][] tablaString = control.getMetaData("ID_Producto,nombre,costo,valor_venta,cantidad,ID_Categoria","producto","ID_Producto");
        tablaModel = new DefaultTableModel(tablaString, columnas);
        inventarioTable.setModel(tablaModel);
    }
    private void conectarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectarMenuItemActionPerformed
        if (!control.conectado) {
            if (control.conectar()) {
                conectarMenuItem.setText("Desconectar");
                enableButtons(true);
                fillObjects();
            }
        } else {
            control.desconectar();
            conectarMenuItem.setText("Conectar");
            enableButtons(false);
        }
    }//GEN-LAST:event_conectarMenuItemActionPerformed

    private void salirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuItemActionPerformed
        System.exit(0);                    // TODO add your handling code here:
    }//GEN-LAST:event_salirMenuItemActionPerformed

    private void ventaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ventaFieldActionPerformed
    private void categoriaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriaComboBoxActionPerformed
        String[] descripcion = control.getStringValues("Categoria", "descripcion", "ID_Categoria");
        try{
            descripcionArea.setText(descripcion[categoriaComboBox.getSelectedIndex()]);
            addCatButton.setText("Actualizar Descripcion");
        }
        catch(ArrayIndexOutOfBoundsException e){}
    }//GEN-LAST:event_categoriaComboBoxActionPerformed

    private void categoriaFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriaFieldMouseClicked
        changeCatButtonName();
    }//GEN-LAST:event_categoriaFieldMouseClicked

    private void buscaCodigoFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscaCodigoFieldMouseClicked
        buscaCodigoField.getDocument().addDocumentListener(new DocumentListener(){
        @Override
        public void insertUpdate(DocumentEvent e) {
            changeButtonName();
            refreshList();
        }
        @Override
        public void removeUpdate(DocumentEvent e) {
            changeButtonName();
            refreshList();
        }
        @Override
        public void changedUpdate(DocumentEvent e) {
            changeButtonName();
            refreshList();
        }
        public void changeButtonName() {
                if (!categoriaField.getText().equals(""))
                    addCatButton.setText("Actualizar Producto");
                else
                    addCatButton.setText("Agregar Producto");
            }
        
        private void refreshList() {
            try{
                ArrayList<String> producto = new ArrayList<String>();
                producto.addAll(Arrays.asList(control.getStringValues("Producto", "ID_Producto", "ID_Producto")));
                ArrayList<String> filtroProducto= filterListByString(producto, buscaCodigoField.getText());
                System.out.println(filtroProducto);
                ArrayList<String> nombre = new ArrayList<String>();
                productoListModel.removeAllElements();
                for (int a=0;a<filtroProducto.size();a++){
                    nombre.add(a,control.getSingleData("nombre","Producto", "ID_Producto", filtroProducto.get(a)));
                    productoListModel.add(a, nombre.get(a));
                }
                System.out.println(nombre);
            }
            catch (ArrayIndexOutOfBoundsException e){
                System.out.println("Error en Actualizar Lista");
            }
        }
        }   );
    }//GEN-LAST:event_buscaCodigoFieldMouseClicked
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (control.deleteValues("Producto", "ID_Producto", codigoField.getText(),false))
            fillObjects();
            JOptionPane.showMessageDialog(null, "Producto borrado", "Borrar Producto", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        boolean adjust = evt.getValueIsAdjusting();
        if (!adjust) {
            String[] producto = control.getSingleRow("producto", "nombre", jList1.getSelectedValue());
            updateButton.setText("Actualizar datos");
            /*
            for (int a = 0; a<producto.length;a++){
                System.out.println(producto[a]);
            }
            */
            codigoField.setText(producto[0]);
            nombreField.setText(producto[1]);
            costoField.setText(producto[2]);
            ventaField.setText(producto[3]);
            cantidadField.setText(producto[4]);
            cantidadSlider.setValue(Integer.parseInt(cantidadField.getText()));
            categoriaComboBox.setSelectedItem(producto[5]);
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void categoriaFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categoriaFieldFocusGained
        changeCatButtonName();        // TODO add your handling code here:
    }//GEN-LAST:event_categoriaFieldFocusGained

    private void categoriaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categoriaFieldFocusLost
        changeCatButtonName();        // TODO add your handling code here:
    }//GEN-LAST:event_categoriaFieldFocusLost
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FerreteriaProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FerreteriaProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FerreteriaProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FerreteriaProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FerreteriaProductoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addCatButton;
    public javax.swing.JTextField buscaCodigoField;
    public javax.swing.JTextField cantidadField;
    private javax.swing.JSlider cantidadSlider;
    public javax.swing.JComboBox<String> categoriaComboBox;
    private javax.swing.JTextField categoriaField;
    private javax.swing.JPanel categoriaPanel;
    public javax.swing.JLabel codLabel;
    private javax.swing.JTextField codigoField;
    private javax.swing.JMenuItem conectarMenuItem;
    public javax.swing.JTextField costoField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteCategoryButton;
    private javax.swing.JTextArea descripcionArea;
    private javax.swing.JTable inventarioTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public javax.swing.JTextField nombreField;
    private javax.swing.JPanel panelInventario;
    private javax.swing.JPanel productoPanel;
    private javax.swing.JMenuItem salirMenuItem;
    private javax.swing.JButton updateButton;
    public javax.swing.JTextField ventaField;
    // End of variables declaration//GEN-END:variables
}
